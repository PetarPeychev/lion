{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "lion",
  "patterns": [
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#builtins"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "builtins": {
      "patterns": [
        {
          "name": "support.function.builtin.lion",
          "match": "\\b(eval|load|def|defm|print|print_values|print_environments|exit)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.lion",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.lion",
              "match": "\\\\(n|t|r|\\\\|\"|0|.)"
            }
          ]
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.language.lion",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.numeric.float.lion",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        },
        {
          "name": "constant.numeric.decimal.lion",
          "match": "\\b([0-9]+|0)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.lion",
          "begin": "\\(",
          "end": "\\)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.range.lion",
          "match": "(\\.\\.=|\\.\\.<)"
        },
        {
          "name": "keyword.operator.comparison.lion",
          "match": "(==|!=|>=|<=|>|<)"
        },
        {
          "name": "keyword.operator.arrow.lion",
          "match": "->"
        },
        {
          "name": "keyword.operator.arithmetic.lion",
          "match": "(\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.assignment.lion",
          "match": "="
        },
        {
          "name": "punctuation.separator.period.lion",
          "match": "\\."
        },
        {
          "name": "punctuation.brackets.square.lion",
          "match": "[\\[\\]]"
        },
        {
          "name": "variable.language.underscore.lion",
          "match": "\\b_\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.lion",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  },
  "scopeName": "source.lion"
}